<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Awethon&#39;s Page</title>
    <link>http://awethon.github.io/posts/</link>
    <description>Recent content in Posts on Awethon&#39;s Page</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 20 Feb 2022 21:55:20 +0300</lastBuildDate><atom:link href="http://awethon.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Different ways to implement wrappers in Scala 2.x</title>
      <link>http://awethon.github.io/posts/scala-wrappers/</link>
      <pubDate>Sun, 20 Feb 2022 21:55:20 +0300</pubDate>
      
      <guid>http://awethon.github.io/posts/scala-wrappers/</guid>
      <description>The wrapper pattern is useful for adding extra logic to methods of a class: logging, metering, tracing, timeouts, retries. It helps to keep code clean and focused on business logic.
Scala is a great language and provides many ways to create wrappers. Maybe even too many.
I decided to create this article because it seems that there&amp;rsquo;s no consensus among Scala developers on how to write them and no clear understanding of downsides and limitations.</description>
    </item>
    
  </channel>
</rss>
